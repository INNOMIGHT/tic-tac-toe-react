{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,WAAhD,SACIF,EAAMG,Q,IAKVC,E,kDACF,WAAYJ,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJC,E,+CAQpB,SAAYC,GACN,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAK,IACvCE,KAAKG,SAAS,CACVR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,0BAK/B,SAAaC,GAAI,IAAD,OACd,OAAO,cAACX,EAAD,CAAQI,MAAOQ,KAAKN,MAAMC,QAAQI,GACrCR,QAAS,kBAAM,EAAKa,YAAYL,Q,oBAMtC,WACE,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAS1C,OANIU,EADAC,EACS,UAAYA,EAGZ,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAIzD,gCACE,qBAAKR,UAAU,aAAf,SACI,2DAEJ,qBAAKA,UAAU,SAAf,SAAyBe,IACzB,sBAAKf,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GA3DTC,IAAMC,WAkEpBC,E,4JACJ,WACE,OACE,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSkB,IAAMC,WAuBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.560c0645.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n\r\nfunction Square(props){\r\n    return (\r\n      <button className=\"square\" onClick={() => props.onClick()}>\r\n        { props.value }\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        }\r\n    }\r\n\r\n  handleClick(i) {\r\n        const squares = this.state.squares.slice()\r\n        if (calculateWinner(squares) || squares[i] ){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X': 'O';\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return <Square value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n    />\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner){\r\n        status = \"Winner \" + winner;\r\n    }\r\n    else{\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"brand-head\">\r\n            <h1>Innomight's Tic Tac Toe</h1>\r\n        </div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}